{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { renderElement } from './utils';\n/**\n * HeaderRow component for BaseTable\n */\n\nvar TableHeaderRow = function TableHeaderRow(_ref) {\n  var className = _ref.className,\n      style = _ref.style,\n      columns = _ref.columns,\n      headerIndex = _ref.headerIndex,\n      cellRenderer = _ref.cellRenderer,\n      headerRenderer = _ref.headerRenderer,\n      expandColumnKey = _ref.expandColumnKey,\n      ExpandIcon = _ref.expandIcon,\n      Tag = _ref.tagName,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"className\", \"style\", \"columns\", \"headerIndex\", \"cellRenderer\", \"headerRenderer\", \"expandColumnKey\", \"expandIcon\", \"tagName\"]);\n\n  var cells = columns.map(function (column, columnIndex) {\n    return cellRenderer({\n      columns: columns,\n      column: column,\n      columnIndex: columnIndex,\n      headerIndex: headerIndex,\n      expandIcon: column.key === expandColumnKey && React.createElement(ExpandIcon, null)\n    });\n  });\n\n  if (headerRenderer) {\n    cells = renderElement(headerRenderer, {\n      cells: cells,\n      columns: columns,\n      headerIndex: headerIndex\n    });\n  }\n\n  return React.createElement(Tag, _extends({}, rest, {\n    className: className,\n    style: style\n  }), cells);\n};\n\nTableHeaderRow.defaultProps = {\n  tagName: 'div'\n};\nTableHeaderRow.propTypes = {\n  isScrolling: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  headerIndex: PropTypes.number,\n  cellRenderer: PropTypes.func,\n  headerRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  expandColumnKey: PropTypes.string,\n  expandIcon: PropTypes.func,\n  tagName: PropTypes.elementType\n};\nexport default TableHeaderRow;","map":{"version":3,"sources":["../src/TableHeaderRow.js"],"names":["TableHeaderRow","className","style","columns","headerIndex","cellRenderer","headerRenderer","expandColumnKey","expandIcon","ExpandIcon","tagName","Tag","rest","cells","column","columnIndex","renderElement","isScrolling","PropTypes","elementType"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AAEA,SAAA,aAAA,QAAA,SAAA;AAEA;;;;AAGA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAWjB;AAAA,MAVJC,SAUI,GAAA,IAAA,CAVJA,SAUI;AAAA,MATJC,KASI,GAAA,IAAA,CATJA,KASI;AAAA,MARJC,OAQI,GAAA,IAAA,CARJA,OAQI;AAAA,MAPJC,WAOI,GAAA,IAAA,CAPJA,WAOI;AAAA,MANJC,YAMI,GAAA,IAAA,CANJA,YAMI;AAAA,MALJC,cAKI,GAAA,IAAA,CALJA,cAKI;AAAA,MAJJC,eAII,GAAA,IAAA,CAJJA,eAII;AAAA,MAHQE,UAGR,GAAA,IAAA,CAHJD,UAGI;AAAA,MAFKG,GAEL,GAAA,IAAA,CAFJD,OAEI;AAAA,MADDE,IACC,GAAA,6BAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,SAAA,EAAA,aAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,SAAA,CAAA,CAAA;;AACJ,MAAIC,KAAK,GAAG,OAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAA,WAAA,EAAA;AAAA,WACtBR,YAAY,CAAC;AACXF,MAAAA,OAAO,EADI,OAAA;AAEXW,MAAAA,MAAM,EAFK,MAAA;AAGXC,MAAAA,WAAW,EAHA,WAAA;AAIXX,MAAAA,WAAW,EAJA,WAAA;AAKXI,MAAAA,UAAU,EAAEM,MAAM,CAANA,GAAAA,KAAAA,eAAAA,IAAkC,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,IAAA;AALnC,KAAD,CADU;AAAxB,GAAY,CAAZ;;AAUA,MAAA,cAAA,EAAoB;AAClBD,IAAAA,KAAK,GAAGG,aAAa,CAAA,cAAA,EAAiB;AAAEH,MAAAA,KAAK,EAAP,KAAA;AAASV,MAAAA,OAAO,EAAhB,OAAA;AAAkBC,MAAAA,WAAW,EAAXA;AAAlB,KAAjB,CAArBS;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAe,IAAA,SAAS,EAAxB,SAAA;AAAqC,IAAA,KAAK,EAAEX;AAA5C,GAAA,CAAA,EADF,KACE,CADF;AA1BF,CAAA;;AAiCAF,cAAc,CAAdA,YAAAA,GAA8B;AAC5BU,EAAAA,OAAO,EAAE;AADmB,CAA9BV;AAIAA,cAAc,CAAdA,SAAAA,GAA2B;AACzBiB,EAAAA,WAAW,EAAEC,SAAS,CADG,IAAA;AAEzBjB,EAAAA,SAAS,EAAEiB,SAAS,CAFK,MAAA;AAGzBhB,EAAAA,KAAK,EAAEgB,SAAS,CAHS,MAAA;AAIzBf,EAAAA,OAAO,EAAEe,SAAS,CAATA,OAAAA,CAAkBA,SAAS,CAA3BA,MAAAA,EAJgB,UAAA;AAKzBd,EAAAA,WAAW,EAAEc,SAAS,CALG,MAAA;AAMzBb,EAAAA,YAAY,EAAEa,SAAS,CANE,IAAA;AAOzBZ,EAAAA,cAAc,EAAEY,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,IAAA,EAAiBA,SAAS,CAPrC,OAOW,CAApBA,CAPS;AAQzBX,EAAAA,eAAe,EAAEW,SAAS,CARD,MAAA;AASzBV,EAAAA,UAAU,EAAEU,SAAS,CATI,IAAA;AAUzBR,EAAAA,OAAO,EAAEQ,SAAS,CAACC;AAVM,CAA3BnB;AAaA,eAAA,cAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { renderElement } from './utils';\n\n/**\n * HeaderRow component for BaseTable\n */\nconst TableHeaderRow = ({\n  className,\n  style,\n  columns,\n  headerIndex,\n  cellRenderer,\n  headerRenderer,\n  expandColumnKey,\n  expandIcon: ExpandIcon,\n  tagName: Tag,\n  ...rest\n}) => {\n  let cells = columns.map((column, columnIndex) =>\n    cellRenderer({\n      columns,\n      column,\n      columnIndex,\n      headerIndex,\n      expandIcon: column.key === expandColumnKey && <ExpandIcon />,\n    })\n  );\n\n  if (headerRenderer) {\n    cells = renderElement(headerRenderer, { cells, columns, headerIndex });\n  }\n\n  return (\n    <Tag {...rest} className={className} style={style}>\n      {cells}\n    </Tag>\n  );\n};\n\nTableHeaderRow.defaultProps = {\n  tagName: 'div',\n};\n\nTableHeaderRow.propTypes = {\n  isScrolling: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  headerIndex: PropTypes.number,\n  cellRenderer: PropTypes.func,\n  headerRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  expandColumnKey: PropTypes.string,\n  expandIcon: PropTypes.func,\n  tagName: PropTypes.elementType,\n};\n\nexport default TableHeaderRow;\n"]},"metadata":{},"sourceType":"module"}
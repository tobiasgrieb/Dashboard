{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { FrozenDirection } from './Column';\n\nvar ColumnManager = /*#__PURE__*/function () {\n  function ColumnManager(columns, fixed) {\n    this._origColumns = [];\n    this.reset(columns, fixed);\n  }\n\n  var _proto = ColumnManager.prototype;\n\n  _proto._cache = function _cache(key, fn) {\n    if (key in this._cached) return this._cached[key];\n    this._cached[key] = fn();\n    return this._cached[key];\n  };\n\n  _proto.reset = function reset(columns, fixed) {\n    var _this = this;\n\n    this._columns = columns.map(function (column) {\n      var width = column.width;\n\n      if (column.resizable) {\n        // don't reset column's `width` if `width` prop doesn't change\n        var idx = _this._origColumns.findIndex(function (x) {\n          return x.key === column.key;\n        });\n\n        if (idx >= 0 && _this._origColumns[idx].width === column.width) {\n          width = _this._columns[idx].width;\n        }\n      }\n\n      return _objectSpread({}, column, {\n        width: width\n      });\n    });\n    this._origColumns = columns;\n    this._fixed = fixed;\n    this._cached = {};\n    this._columnStyles = this.recomputeColumnStyles();\n  };\n\n  _proto.resetCache = function resetCache() {\n    this._cached = {};\n  };\n\n  _proto.getOriginalColumns = function getOriginalColumns() {\n    return this._origColumns;\n  };\n\n  _proto.getColumns = function getColumns() {\n    return this._columns;\n  };\n\n  _proto.getVisibleColumns = function getVisibleColumns() {\n    var _this2 = this;\n\n    return this._cache('visibleColumns', function () {\n      return _this2._columns.filter(function (column) {\n        return !column.hidden;\n      });\n    });\n  };\n\n  _proto.hasFrozenColumns = function hasFrozenColumns() {\n    var _this3 = this;\n\n    return this._cache('hasFrozenColumns', function () {\n      return _this3._fixed && _this3.getVisibleColumns().some(function (column) {\n        return !!column.frozen;\n      });\n    });\n  };\n\n  _proto.hasLeftFrozenColumns = function hasLeftFrozenColumns() {\n    var _this4 = this;\n\n    return this._cache('hasLeftFrozenColumns', function () {\n      return _this4._fixed && _this4.getVisibleColumns().some(function (column) {\n        return column.frozen === FrozenDirection.LEFT || column.frozen === true;\n      });\n    });\n  };\n\n  _proto.hasRightFrozenColumns = function hasRightFrozenColumns() {\n    var _this5 = this;\n\n    return this._cache('hasRightFrozenColumns', function () {\n      return _this5._fixed && _this5.getVisibleColumns().some(function (column) {\n        return column.frozen === FrozenDirection.RIGHT;\n      });\n    });\n  };\n\n  _proto.getMainColumns = function getMainColumns() {\n    var _this6 = this;\n\n    return this._cache('mainColumns', function () {\n      var columns = _this6.getVisibleColumns();\n\n      if (!_this6.hasFrozenColumns()) return columns;\n      var mainColumns = [];\n\n      _this6.getLeftFrozenColumns().forEach(function (column) {\n        var _objectSpread2; //columns placeholder for the fixed table above them\n\n\n        mainColumns.push(_objectSpread({}, column, (_objectSpread2 = {}, _objectSpread2[ColumnManager.PlaceholderKey] = true, _objectSpread2)));\n      });\n\n      _this6.getVisibleColumns().forEach(function (column) {\n        if (!column.frozen) mainColumns.push(column);\n      });\n\n      _this6.getRightFrozenColumns().forEach(function (column) {\n        var _objectSpread3;\n\n        mainColumns.push(_objectSpread({}, column, (_objectSpread3 = {}, _objectSpread3[ColumnManager.PlaceholderKey] = true, _objectSpread3)));\n      });\n\n      return mainColumns;\n    });\n  };\n\n  _proto.getLeftFrozenColumns = function getLeftFrozenColumns() {\n    var _this7 = this;\n\n    return this._cache('leftFrozenColumns', function () {\n      if (!_this7._fixed) return [];\n      return _this7.getVisibleColumns().filter(function (column) {\n        return column.frozen === FrozenDirection.LEFT || column.frozen === true;\n      });\n    });\n  };\n\n  _proto.getRightFrozenColumns = function getRightFrozenColumns() {\n    var _this8 = this;\n\n    return this._cache('rightFrozenColumns', function () {\n      if (!_this8._fixed) return [];\n      return _this8.getVisibleColumns().filter(function (column) {\n        return column.frozen === FrozenDirection.RIGHT;\n      });\n    });\n  };\n\n  _proto.getColumn = function getColumn(key) {\n    var idx = this._columns.findIndex(function (column) {\n      return column.key === key;\n    });\n\n    return this._columns[idx];\n  };\n\n  _proto.getColumnsWidth = function getColumnsWidth() {\n    var _this9 = this;\n\n    return this._cache('columnsWidth', function () {\n      return _this9.recomputeColumnsWidth(_this9.getVisibleColumns());\n    });\n  };\n\n  _proto.getLeftFrozenColumnsWidth = function getLeftFrozenColumnsWidth() {\n    var _this10 = this;\n\n    return this._cache('leftFrozenColumnsWidth', function () {\n      return _this10.recomputeColumnsWidth(_this10.getLeftFrozenColumns());\n    });\n  };\n\n  _proto.getRightFrozenColumnsWidth = function getRightFrozenColumnsWidth() {\n    var _this11 = this;\n\n    return this._cache('rightFrozenColumnsWidth', function () {\n      return _this11.recomputeColumnsWidth(_this11.getRightFrozenColumns());\n    });\n  };\n\n  _proto.recomputeColumnsWidth = function recomputeColumnsWidth(columns) {\n    return columns.reduce(function (width, column) {\n      return width + column.width;\n    }, 0);\n  };\n\n  _proto.setColumnWidth = function setColumnWidth(key, width) {\n    var column = this.getColumn(key);\n    column.width = width;\n    this._cached = {};\n    this._columnStyles[column.key] = this.recomputeColumnStyle(column);\n  };\n\n  _proto.getColumnStyle = function getColumnStyle(key) {\n    return this._columnStyles[key];\n  };\n\n  _proto.getColumnStyles = function getColumnStyles() {\n    return this._columnStyles;\n  };\n\n  _proto.recomputeColumnStyle = function recomputeColumnStyle(column) {\n    var flexGrow = 0;\n    var flexShrink = 0;\n\n    if (!this._fixed) {\n      flexGrow = typeof column.flexGrow === 'number' ? column.flexGrow : 0;\n      flexShrink = typeof column.flexShrink === 'number' ? column.flexShrink : 1;\n    } // workaround for Flex bug on IE: https://github.com/philipwalton/flexbugs#flexbug-7\n\n\n    var flexValue = flexGrow + \" \" + flexShrink + \" auto\";\n\n    var style = _objectSpread({}, column.style, {\n      flex: flexValue,\n      msFlex: flexValue,\n      WebkitFlex: flexValue,\n      width: column.width,\n      overflow: 'hidden'\n    });\n\n    if (!this._fixed && column.maxWidth) {\n      style.maxWidth = column.maxWidth;\n    }\n\n    if (!this._fixed && column.minWidth) {\n      style.minWidth = column.minWidth;\n    }\n\n    return style;\n  };\n\n  _proto.recomputeColumnStyles = function recomputeColumnStyles() {\n    var _this12 = this;\n\n    return this._columns.reduce(function (styles, column) {\n      styles[column.key] = _this12.recomputeColumnStyle(column);\n      return styles;\n    }, {});\n  };\n\n  return ColumnManager;\n}();\n\nexport { ColumnManager as default };\nColumnManager.PlaceholderKey = '__placeholder__';","map":{"version":3,"sources":["../src/ColumnManager.js"],"names":["ColumnManager","_cache","key","fn","reset","width","column","idx","x","resetCache","getOriginalColumns","getColumns","getVisibleColumns","hasFrozenColumns","hasLeftFrozenColumns","FrozenDirection","hasRightFrozenColumns","getMainColumns","columns","mainColumns","getLeftFrozenColumns","getRightFrozenColumns","getColumn","getColumnsWidth","getLeftFrozenColumnsWidth","getRightFrozenColumnsWidth","recomputeColumnsWidth","setColumnWidth","getColumnStyle","getColumnStyles","recomputeColumnStyle","flexGrow","flexShrink","flexValue","style","flex","msFlex","WebkitFlex","overflow","recomputeColumnStyles","styles"],"mappings":"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","sourcesContent":["import { FrozenDirection } from './Column';\n\nexport default class ColumnManager {\n  constructor(columns, fixed) {\n    this._origColumns = [];\n    this.reset(columns, fixed);\n  }\n\n  _cache(key, fn) {\n    if (key in this._cached) return this._cached[key];\n    this._cached[key] = fn();\n    return this._cached[key];\n  }\n\n  reset(columns, fixed) {\n    this._columns = columns.map(column => {\n      let width = column.width;\n      if (column.resizable) {\n        // don't reset column's `width` if `width` prop doesn't change\n        const idx = this._origColumns.findIndex(x => x.key === column.key);\n        if (idx >= 0 && this._origColumns[idx].width === column.width) {\n          width = this._columns[idx].width;\n        }\n      }\n      return { ...column, width };\n    });\n    this._origColumns = columns;\n    this._fixed = fixed;\n    this._cached = {};\n    this._columnStyles = this.recomputeColumnStyles();\n  }\n\n  resetCache() {\n    this._cached = {};\n  }\n\n  getOriginalColumns() {\n    return this._origColumns;\n  }\n\n  getColumns() {\n    return this._columns;\n  }\n\n  getVisibleColumns() {\n    return this._cache('visibleColumns', () => {\n      return this._columns.filter(column => !column.hidden);\n    });\n  }\n\n  hasFrozenColumns() {\n    return this._cache('hasFrozenColumns', () => {\n      return this._fixed && this.getVisibleColumns().some(column => !!column.frozen);\n    });\n  }\n\n  hasLeftFrozenColumns() {\n    return this._cache('hasLeftFrozenColumns', () => {\n      return (\n        this._fixed &&\n        this.getVisibleColumns().some(column => column.frozen === FrozenDirection.LEFT || column.frozen === true)\n      );\n    });\n  }\n\n  hasRightFrozenColumns() {\n    return this._cache('hasRightFrozenColumns', () => {\n      return this._fixed && this.getVisibleColumns().some(column => column.frozen === FrozenDirection.RIGHT);\n    });\n  }\n\n  getMainColumns() {\n    return this._cache('mainColumns', () => {\n      const columns = this.getVisibleColumns();\n      if (!this.hasFrozenColumns()) return columns;\n\n      const mainColumns = [];\n      this.getLeftFrozenColumns().forEach(column => {\n        //columns placeholder for the fixed table above them\n        mainColumns.push({ ...column, [ColumnManager.PlaceholderKey]: true });\n      });\n      this.getVisibleColumns().forEach(column => {\n        if (!column.frozen) mainColumns.push(column);\n      });\n      this.getRightFrozenColumns().forEach(column => {\n        mainColumns.push({ ...column, [ColumnManager.PlaceholderKey]: true });\n      });\n\n      return mainColumns;\n    });\n  }\n\n  getLeftFrozenColumns() {\n    return this._cache('leftFrozenColumns', () => {\n      if (!this._fixed) return [];\n      return this.getVisibleColumns().filter(\n        column => column.frozen === FrozenDirection.LEFT || column.frozen === true\n      );\n    });\n  }\n\n  getRightFrozenColumns() {\n    return this._cache('rightFrozenColumns', () => {\n      if (!this._fixed) return [];\n      return this.getVisibleColumns().filter(column => column.frozen === FrozenDirection.RIGHT);\n    });\n  }\n\n  getColumn(key) {\n    const idx = this._columns.findIndex(column => column.key === key);\n    return this._columns[idx];\n  }\n\n  getColumnsWidth() {\n    return this._cache('columnsWidth', () => {\n      return this.recomputeColumnsWidth(this.getVisibleColumns());\n    });\n  }\n\n  getLeftFrozenColumnsWidth() {\n    return this._cache('leftFrozenColumnsWidth', () => {\n      return this.recomputeColumnsWidth(this.getLeftFrozenColumns());\n    });\n  }\n\n  getRightFrozenColumnsWidth() {\n    return this._cache('rightFrozenColumnsWidth', () => {\n      return this.recomputeColumnsWidth(this.getRightFrozenColumns());\n    });\n  }\n\n  recomputeColumnsWidth(columns) {\n    return columns.reduce((width, column) => width + column.width, 0);\n  }\n\n  setColumnWidth(key, width) {\n    const column = this.getColumn(key);\n    column.width = width;\n    this._cached = {};\n    this._columnStyles[column.key] = this.recomputeColumnStyle(column);\n  }\n\n  getColumnStyle(key) {\n    return this._columnStyles[key];\n  }\n\n  getColumnStyles() {\n    return this._columnStyles;\n  }\n\n  recomputeColumnStyle(column) {\n    let flexGrow = 0;\n    let flexShrink = 0;\n    if (!this._fixed) {\n      flexGrow = typeof column.flexGrow === 'number' ? column.flexGrow : 0;\n      flexShrink = typeof column.flexShrink === 'number' ? column.flexShrink : 1;\n    }\n    // workaround for Flex bug on IE: https://github.com/philipwalton/flexbugs#flexbug-7\n    const flexValue = `${flexGrow} ${flexShrink} auto`;\n\n    const style = {\n      ...column.style,\n      flex: flexValue,\n      msFlex: flexValue,\n      WebkitFlex: flexValue,\n      width: column.width,\n      overflow: 'hidden',\n    };\n\n    if (!this._fixed && column.maxWidth) {\n      style.maxWidth = column.maxWidth;\n    }\n    if (!this._fixed && column.minWidth) {\n      style.minWidth = column.minWidth;\n    }\n\n    return style;\n  }\n\n  recomputeColumnStyles() {\n    return this._columns.reduce((styles, column) => {\n      styles[column.key] = this.recomputeColumnStyle(column);\n      return styles;\n    }, {});\n  }\n}\n\nColumnManager.PlaceholderKey = '__placeholder__';\n"]},"metadata":{},"sourceType":"module"}
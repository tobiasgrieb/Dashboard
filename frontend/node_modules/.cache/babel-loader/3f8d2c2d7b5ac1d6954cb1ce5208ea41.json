{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar TableHeader = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(TableHeader, _React$PureComponent);\n\n  function TableHeader(props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, props) || this;\n    _this.renderHeaderRow = _this.renderHeaderRow.bind(_assertThisInitialized(_this));\n    _this.renderFrozenRow = _this.renderFrozenRow.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = TableHeader.prototype;\n\n  _proto.scrollTo = function scrollTo(offset) {\n    if (this.headerRef) this.headerRef.scrollLeft = offset;\n  };\n\n  _proto.renderHeaderRow = function renderHeaderRow(height, index) {\n    var _this$props = this.props,\n        columns = _this$props.columns,\n        headerRenderer = _this$props.headerRenderer;\n    if (height <= 0) return null;\n    var style = {\n      width: '100%',\n      height: height\n    };\n    return headerRenderer({\n      style: style,\n      columns: columns,\n      headerIndex: index\n    });\n  };\n\n  _proto.renderFrozenRow = function renderFrozenRow(rowData, index) {\n    var _this$props2 = this.props,\n        columns = _this$props2.columns,\n        rowHeight = _this$props2.rowHeight,\n        rowRenderer = _this$props2.rowRenderer;\n    var style = {\n      width: '100%',\n      height: rowHeight\n    }; // for frozen row the `rowIndex` is negative\n\n    var rowIndex = -index - 1;\n    return rowRenderer({\n      style: style,\n      columns: columns,\n      rowData: rowData,\n      rowIndex: rowIndex\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        className = _this$props3.className,\n        width = _this$props3.width,\n        height = _this$props3.height,\n        rowWidth = _this$props3.rowWidth,\n        headerHeight = _this$props3.headerHeight,\n        frozenData = _this$props3.frozenData;\n    if (height <= 0) return null;\n    var style = {\n      width: width,\n      height: height,\n      position: 'relative',\n      overflow: 'hidden'\n    };\n    var innerStyle = {\n      width: rowWidth,\n      height: height\n    };\n    var rowHeights = Array.isArray(headerHeight) ? headerHeight : [headerHeight];\n    return React.createElement(\"div\", {\n      role: \"grid\",\n      ref: this._setRef,\n      className: className,\n      style: style\n    }, React.createElement(\"div\", {\n      role: \"rowgroup\",\n      style: innerStyle\n    }, rowHeights.map(this.renderHeaderRow), frozenData.map(this.renderFrozenRow)));\n  };\n\n  _proto._setRef = function _setRef(ref) {\n    this.headerRef = ref;\n  };\n\n  return TableHeader;\n}(React.PureComponent);\n\nTableHeader.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  headerHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).isRequired,\n  rowWidth: PropTypes.number.isRequired,\n  rowHeight: PropTypes.number.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  data: PropTypes.array.isRequired,\n  frozenData: PropTypes.array,\n  headerRenderer: PropTypes.func.isRequired,\n  rowRenderer: PropTypes.func.isRequired\n};\nexport default TableHeader;","map":{"version":3,"sources":["../src/TableHeader.js"],"names":["TableHeader","React","PureComponent","scrollTo","renderHeaderRow","columns","headerRenderer","height","style","width","headerIndex","index","renderFrozenRow","rowHeight","rowRenderer","rowIndex","rowData","render","className","rowWidth","headerHeight","frozenData","position","overflow","innerStyle","rowHeights","Array","_setRef","PropTypes","data","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TableHeader extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.renderHeaderRow = this.renderHeaderRow.bind(this);\n    this.renderFrozenRow = this.renderFrozenRow.bind(this);\n    this._setRef = this._setRef.bind(this);\n  }\n\n  scrollTo(offset) {\n    if (this.headerRef) this.headerRef.scrollLeft = offset;\n  }\n\n  renderHeaderRow(height, index) {\n    const { columns, headerRenderer } = this.props;\n    if (height <= 0) return null;\n\n    const style = { width: '100%', height };\n    return headerRenderer({ style, columns, headerIndex: index });\n  }\n\n  renderFrozenRow(rowData, index) {\n    const { columns, rowHeight, rowRenderer } = this.props;\n    const style = { width: '100%', height: rowHeight };\n    // for frozen row the `rowIndex` is negative\n    const rowIndex = -index - 1;\n    return rowRenderer({ style, columns, rowData, rowIndex });\n  }\n\n  render() {\n    const { className, width, height, rowWidth, headerHeight, frozenData } = this.props;\n    if (height <= 0) return null;\n\n    const style = {\n      width,\n      height: height,\n      position: 'relative',\n      overflow: 'hidden',\n    };\n\n    const innerStyle = {\n      width: rowWidth,\n      height,\n    };\n\n    const rowHeights = Array.isArray(headerHeight) ? headerHeight : [headerHeight];\n    return (\n      <div role=\"grid\" ref={this._setRef} className={className} style={style}>\n        <div role=\"rowgroup\" style={innerStyle}>\n          {rowHeights.map(this.renderHeaderRow)}\n          {frozenData.map(this.renderFrozenRow)}\n        </div>\n      </div>\n    );\n  }\n\n  _setRef(ref) {\n    this.headerRef = ref;\n  }\n}\n\nTableHeader.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  headerHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).isRequired,\n  rowWidth: PropTypes.number.isRequired,\n  rowHeight: PropTypes.number.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  data: PropTypes.array.isRequired,\n  frozenData: PropTypes.array,\n  headerRenderer: PropTypes.func.isRequired,\n  rowRenderer: PropTypes.func.isRequired,\n};\n\nexport default TableHeader;\n"]},"metadata":{},"sourceType":"module"}
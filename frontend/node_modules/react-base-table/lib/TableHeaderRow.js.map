{"version":3,"sources":["../src/TableHeaderRow.js"],"names":["TableHeaderRow","className","style","columns","headerIndex","cellRenderer","headerRenderer","expandColumnKey","ExpandIcon","expandIcon","Tag","tagName","rest","cells","map","column","columnIndex","key","defaultProps","propTypes","isScrolling","PropTypes","bool","string","object","arrayOf","isRequired","number","func","oneOfType","element","elementType"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;;AAGA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,OAWjB;AAAA,MAVJC,SAUI,QAVJA,SAUI;AAAA,MATJC,KASI,QATJA,KASI;AAAA,MARJC,OAQI,QARJA,OAQI;AAAA,MAPJC,WAOI,QAPJA,WAOI;AAAA,MANJC,YAMI,QANJA,YAMI;AAAA,MALJC,cAKI,QALJA,cAKI;AAAA,MAJJC,eAII,QAJJA,eAII;AAAA,MAHQC,UAGR,QAHJC,UAGI;AAAA,MAFKC,GAEL,QAFJC,OAEI;AAAA,MADDC,IACC;AACJ,MAAIC,KAAK,GAAGV,OAAO,CAACW,GAAR,CAAY,UAACC,MAAD,EAASC,WAAT;AAAA,WACtBX,YAAY,CAAC;AACXF,MAAAA,OAAO,EAAPA,OADW;AAEXY,MAAAA,MAAM,EAANA,MAFW;AAGXC,MAAAA,WAAW,EAAXA,WAHW;AAIXZ,MAAAA,WAAW,EAAXA,WAJW;AAKXK,MAAAA,UAAU,EAAEM,MAAM,CAACE,GAAP,KAAeV,eAAf,IAAkC,gCAAC,UAAD;AALnC,KAAD,CADU;AAAA,GAAZ,CAAZ;;AAUA,MAAID,cAAJ,EAAoB;AAClBO,IAAAA,KAAK,GAAG,0BAAcP,cAAd,EAA8B;AAAEO,MAAAA,KAAK,EAALA,KAAF;AAASV,MAAAA,OAAO,EAAPA,OAAT;AAAkBC,MAAAA,WAAW,EAAXA;AAAlB,KAA9B,CAAR;AACD;;AAED,SACE,gCAAC,GAAD,gCAASQ,IAAT;AAAe,IAAA,SAAS,EAAEX,SAA1B;AAAqC,IAAA,KAAK,EAAEC;AAA5C,MACGW,KADH,CADF;AAKD,CA/BD;;AAiCAb,cAAc,CAACkB,YAAf,GAA8B;AAC5BP,EAAAA,OAAO,EAAE;AADmB,CAA9B;AAIAX,cAAc,CAACmB,SAAf,GAA2B;AACzBC,EAAAA,WAAW,EAAEC,sBAAUC,IADE;AAEzBrB,EAAAA,SAAS,EAAEoB,sBAAUE,MAFI;AAGzBrB,EAAAA,KAAK,EAAEmB,sBAAUG,MAHQ;AAIzBrB,EAAAA,OAAO,EAAEkB,sBAAUI,OAAV,CAAkBJ,sBAAUG,MAA5B,EAAoCE,UAJpB;AAKzBtB,EAAAA,WAAW,EAAEiB,sBAAUM,MALE;AAMzBtB,EAAAA,YAAY,EAAEgB,sBAAUO,IANC;AAOzBtB,EAAAA,cAAc,EAAEe,sBAAUQ,SAAV,CAAoB,CAACR,sBAAUO,IAAX,EAAiBP,sBAAUS,OAA3B,CAApB,CAPS;AAQzBvB,EAAAA,eAAe,EAAEc,sBAAUE,MARF;AASzBd,EAAAA,UAAU,EAAEY,sBAAUO,IATG;AAUzBjB,EAAAA,OAAO,EAAEU,sBAAUU;AAVM,CAA3B;eAae/B,c","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { renderElement } from './utils';\n\n/**\n * HeaderRow component for BaseTable\n */\nconst TableHeaderRow = ({\n  className,\n  style,\n  columns,\n  headerIndex,\n  cellRenderer,\n  headerRenderer,\n  expandColumnKey,\n  expandIcon: ExpandIcon,\n  tagName: Tag,\n  ...rest\n}) => {\n  let cells = columns.map((column, columnIndex) =>\n    cellRenderer({\n      columns,\n      column,\n      columnIndex,\n      headerIndex,\n      expandIcon: column.key === expandColumnKey && <ExpandIcon />,\n    })\n  );\n\n  if (headerRenderer) {\n    cells = renderElement(headerRenderer, { cells, columns, headerIndex });\n  }\n\n  return (\n    <Tag {...rest} className={className} style={style}>\n      {cells}\n    </Tag>\n  );\n};\n\nTableHeaderRow.defaultProps = {\n  tagName: 'div',\n};\n\nTableHeaderRow.propTypes = {\n  isScrolling: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  headerIndex: PropTypes.number,\n  cellRenderer: PropTypes.func,\n  headerRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  expandColumnKey: PropTypes.string,\n  expandIcon: PropTypes.func,\n  tagName: PropTypes.elementType,\n};\n\nexport default TableHeaderRow;\n"],"file":"TableHeaderRow.js"}
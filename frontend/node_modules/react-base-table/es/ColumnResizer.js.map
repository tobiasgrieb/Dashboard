{"version":3,"sources":["../src/ColumnResizer.js"],"names":["React","PropTypes","noop","addClassName","removeClassName","INVALID_VALUE","addUserSelectStyles","doc","styleEl","getElementById","createElement","type","id","innerHTML","getElementsByTagName","appendChild","body","removeUserSelectStyles","selection","empty","defaultView","window","getSelection","removeAllRanges","e","eventsFor","touch","start","move","stop","mouse","dragEventFor","ColumnResizer","props","isDragging","lastX","width","_setHandleRef","bind","_handleClick","_handleMouseDown","_handleMouseUp","_handleTouchStart","_handleTouchEnd","_handleDragStart","_handleDragStop","_handleDrag","componentWillUnmount","handleRef","ownerDocument","removeEventListener","render","style","column","onResizeStart","onResize","onResizeStop","minWidth","rest","userSelect","touchAction","position","top","bottom","right","cursor","ref","stopPropagation","button","addEventListener","clientX","preventDefault","targetTouches","offsetParent","offsetParentRect","getBoundingClientRect","x","scrollLeft","left","MIN_WIDTH","maxWidth","movedX","newWidth","PureComponent","defaultProps","propTypes","object","func","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { noop, addClassName, removeClassName } from './utils';\n\nconst INVALID_VALUE = null;\n\n// copied from https://github.com/mzabriskie/react-draggable/blob/master/lib/utils/domFns.js\nexport function addUserSelectStyles(doc) {\n  if (!doc) return;\n  let styleEl = doc.getElementById('react-draggable-style-el');\n  if (!styleEl) {\n    styleEl = doc.createElement('style');\n    styleEl.type = 'text/css';\n    styleEl.id = 'react-draggable-style-el';\n    styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {all: inherit;}\\n';\n    styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {all: inherit;}\\n';\n    doc.getElementsByTagName('head')[0].appendChild(styleEl);\n  }\n  if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n}\n\nexport function removeUserSelectStyles(doc) {\n  if (!doc) return;\n  try {\n    if (doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection');\n    if (doc.selection) {\n      doc.selection.empty();\n    } else {\n      // Remove selection caused by scroll, unless it's a focused input\n      // (we use doc.defaultView in case we're in an iframe)\n      const selection = (doc.defaultView || window).getSelection();\n      if (selection && selection.type !== 'Caret') {\n        selection.removeAllRanges();\n      }\n    }\n  } catch (e) {\n    // probably IE\n  }\n}\n\nconst eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    stop: 'touchend',\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    stop: 'mouseup',\n  },\n};\n\nlet dragEventFor = eventsFor.mouse;\n\n/**\n * ColumnResizer for BaseTable\n */\nclass ColumnResizer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.isDragging = false;\n    this.lastX = INVALID_VALUE;\n    this.width = 0;\n\n    this._setHandleRef = this._setHandleRef.bind(this);\n    this._handleClick = this._handleClick.bind(this);\n    this._handleMouseDown = this._handleMouseDown.bind(this);\n    this._handleMouseUp = this._handleMouseUp.bind(this);\n    this._handleTouchStart = this._handleTouchStart.bind(this);\n    this._handleTouchEnd = this._handleTouchEnd.bind(this);\n    this._handleDragStart = this._handleDragStart.bind(this);\n    this._handleDragStop = this._handleDragStop.bind(this);\n    this._handleDrag = this._handleDrag.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.handleRef) {\n      const { ownerDocument } = this.handleRef;\n      ownerDocument.removeEventListener(eventsFor.mouse.move, this._handleDrag);\n      ownerDocument.removeEventListener(eventsFor.mouse.stop, this._handleDragStop);\n      ownerDocument.removeEventListener(eventsFor.touch.move, this._handleDrag);\n      ownerDocument.removeEventListener(eventsFor.touch.stop, this._handleDragStop);\n      removeUserSelectStyles(ownerDocument);\n    }\n  }\n\n  render() {\n    const { style, column, onResizeStart, onResize, onResizeStop, minWidth, ...rest } = this.props;\n\n    return (\n      <div\n        {...rest}\n        ref={this._setHandleRef}\n        onClick={this._handleClick}\n        onMouseDown={this._handleMouseDown}\n        onMouseUp={this._handleMouseUp}\n        onTouchStart={this._handleTouchStart}\n        onTouchEnd={this._handleTouchEnd}\n        style={{\n          userSelect: 'none',\n          touchAction: 'none',\n          position: 'absolute',\n          top: 0,\n          bottom: 0,\n          right: 0,\n          cursor: 'col-resize',\n          ...style,\n        }}\n      />\n    );\n  }\n\n  _setHandleRef(ref) {\n    this.handleRef = ref;\n  }\n\n  _handleClick(e) {\n    e.stopPropagation();\n  }\n\n  _handleMouseDown(e) {\n    dragEventFor = eventsFor.mouse;\n    this._handleDragStart(e);\n  }\n\n  _handleMouseUp(e) {\n    dragEventFor = eventsFor.mouse;\n    this._handleDragStop(e);\n  }\n\n  _handleTouchStart(e) {\n    dragEventFor = eventsFor.touch;\n    this._handleDragStart(e);\n  }\n\n  _handleTouchEnd(e) {\n    dragEventFor = eventsFor.touch;\n    this._handleDragStop(e);\n  }\n\n  _handleDragStart(e) {\n    if (typeof e.button === 'number' && e.button !== 0) return;\n\n    this.isDragging = true;\n    this.lastX = INVALID_VALUE;\n    this.width = this.props.column.width;\n    this.props.onResizeStart(this.props.column);\n\n    const { ownerDocument } = this.handleRef;\n    addUserSelectStyles(ownerDocument);\n    ownerDocument.addEventListener(dragEventFor.move, this._handleDrag);\n    ownerDocument.addEventListener(dragEventFor.stop, this._handleDragStop);\n  }\n\n  _handleDragStop(e) {\n    if (!this.isDragging) return;\n    this.isDragging = false;\n\n    this.props.onResizeStop(this.props.column);\n\n    const { ownerDocument } = this.handleRef;\n    removeUserSelectStyles(ownerDocument);\n    ownerDocument.removeEventListener(dragEventFor.move, this._handleDrag);\n    ownerDocument.removeEventListener(dragEventFor.stop, this._handleDragStop);\n  }\n\n  _handleDrag(e) {\n    let clientX = e.clientX;\n    if (e.type === eventsFor.touch.move) {\n      e.preventDefault();\n      if (e.targetTouches && e.targetTouches[0]) clientX = e.targetTouches[0].clientX;\n    }\n\n    const { offsetParent } = this.handleRef;\n    const offsetParentRect = offsetParent.getBoundingClientRect();\n    const x = clientX + offsetParent.scrollLeft - offsetParentRect.left;\n\n    if (this.lastX === INVALID_VALUE) {\n      this.lastX = x;\n      return;\n    }\n\n    const { column, minWidth: MIN_WIDTH } = this.props;\n    const { width, maxWidth, minWidth = MIN_WIDTH } = column;\n    const movedX = x - this.lastX;\n    if (!movedX) return;\n\n    this.width = this.width + movedX;\n    this.lastX = x;\n\n    let newWidth = this.width;\n    if (maxWidth && newWidth > maxWidth) {\n      newWidth = maxWidth;\n    } else if (newWidth < minWidth) {\n      newWidth = minWidth;\n    }\n\n    if (newWidth === width) return;\n    this.props.onResize(column, newWidth);\n  }\n}\n\nColumnResizer.defaultProps = {\n  onResizeStart: noop,\n  onResize: noop,\n  onResizeStop: noop,\n  minWidth: 30,\n};\n\nColumnResizer.propTypes = {\n  /**\n   * Custom style for the drag handler\n   */\n  style: PropTypes.object,\n  /**\n   * The column object to be dragged\n   */\n  column: PropTypes.object,\n  /**\n   * A callback function when resizing started\n   * The callback is of the shape of `(column) => *`\n   */\n  onResizeStart: PropTypes.func,\n  /**\n   * A callback function when resizing the column\n   * The callback is of the shape of `(column, width) => *`\n   */\n  onResize: PropTypes.func,\n  /**\n   * A callback function when resizing stopped\n   * The callback is of the shape of `(column) => *`\n   */\n  onResizeStop: PropTypes.func,\n  /**\n   * Minimum width of the column could be resized to if the column's `minWidth` is not set\n   */\n  minWidth: PropTypes.number,\n};\n\nexport default ColumnResizer;\n"],"file":"ColumnResizer.js"}
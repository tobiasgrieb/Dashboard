{"version":3,"sources":["../src/TableRow.js"],"names":["React","PropTypes","renderElement","TableRow","props","state","measured","_setRef","bind","_handleExpand","componentDidMount","estimatedRowHeight","rowIndex","_measureHeight","componentDidUpdate","prevProps","prevState","getIsResetting","setState","render","isScrolling","className","style","columns","rowData","expandColumnKey","depth","rowEventHandlers","rowRenderer","cellRenderer","expandIconRenderer","Tag","tagName","rowKey","onRowHover","onRowExpand","onRowHeightChange","rest","expandIcon","onExpand","cells","map","column","columnIndex","key","eventHandlers","_getEventHandlers","height","otherStyles","ref","expanded","initialMeasure","getBoundingClientRect","__placeholder__","frozen","handlers","Object","keys","forEach","eventKey","callback","event","mouseEnterHandler","hovered","mouseLeaveHandler","PureComponent","defaultProps","propTypes","bool","string","object","arrayOf","isRequired","number","oneOfType","func","element","elementType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { renderElement } from './utils';\n\n/**\n * Row component for BaseTable\n */\nclass TableRow extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      measured: false,\n    };\n\n    this._setRef = this._setRef.bind(this);\n    this._handleExpand = this._handleExpand.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.estimatedRowHeight && this.props.rowIndex >= 0 && this._measureHeight(true);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.estimatedRowHeight &&\n      this.props.rowIndex >= 0 &&\n      // should not re-measure if it's updated after measured and reset\n      !this.props.getIsResetting() &&\n      this.state.measured &&\n      prevState.measured\n    ) {\n      this.setState({ measured: false }, () => this._measureHeight());\n    }\n  }\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const {\n      isScrolling,\n      className,\n      style,\n      columns,\n      rowIndex,\n      rowData,\n      expandColumnKey,\n      depth,\n      rowEventHandlers,\n      estimatedRowHeight,\n      rowRenderer,\n      cellRenderer,\n      expandIconRenderer,\n      tagName: Tag,\n      // omit the following from rest\n      rowKey,\n      getIsResetting,\n      onRowHover,\n      onRowExpand,\n      onRowHeightChange,\n      ...rest\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    const expandIcon = expandIconRenderer({ rowData, rowIndex, depth, onExpand: this._handleExpand });\n    let cells = columns.map((column, columnIndex) =>\n      cellRenderer({\n        isScrolling,\n        columns,\n        column,\n        columnIndex,\n        rowData,\n        rowIndex,\n        expandIcon: column.key === expandColumnKey && expandIcon,\n      })\n    );\n\n    if (rowRenderer) {\n      cells = renderElement(rowRenderer, { isScrolling, cells, columns, rowData, rowIndex, depth });\n    }\n\n    const eventHandlers = this._getEventHandlers(rowEventHandlers);\n\n    if (estimatedRowHeight && rowIndex >= 0) {\n      const { height, ...otherStyles } = style;\n      return (\n        <Tag\n          {...rest}\n          ref={this._setRef}\n          className={className}\n          style={this.state.measured ? style : otherStyles}\n          {...(this.state.measured && eventHandlers)}\n        >\n          {cells}\n        </Tag>\n      );\n    }\n\n    return (\n      <Tag {...rest} className={className} style={style} {...eventHandlers}>\n        {cells}\n      </Tag>\n    );\n  }\n\n  _setRef(ref) {\n    this.ref = ref;\n  }\n\n  _handleExpand(expanded) {\n    const { onRowExpand, rowData, rowIndex, rowKey } = this.props;\n    onRowExpand && onRowExpand({ expanded, rowData, rowIndex, rowKey });\n  }\n\n  _measureHeight(initialMeasure) {\n    if (!this.ref) return;\n\n    const { style, rowKey, onRowHeightChange, rowIndex, columns } = this.props;\n    const height = this.ref.getBoundingClientRect().height;\n    this.setState({ measured: true }, () => {\n      if (initialMeasure || height !== style.height)\n        onRowHeightChange(rowKey, height, rowIndex, columns[0] && !columns[0].__placeholder__ && columns[0].frozen);\n    });\n  }\n\n  _getEventHandlers(handlers = {}) {\n    const { rowData, rowIndex, rowKey, onRowHover } = this.props;\n    const eventHandlers = {};\n    Object.keys(handlers).forEach(eventKey => {\n      const callback = handlers[eventKey];\n      if (typeof callback === 'function') {\n        eventHandlers[eventKey] = event => {\n          callback({ rowData, rowIndex, rowKey, event });\n        };\n      }\n    });\n\n    if (onRowHover) {\n      const mouseEnterHandler = eventHandlers['onMouseEnter'];\n      eventHandlers['onMouseEnter'] = event => {\n        onRowHover({\n          hovered: true,\n          rowData,\n          rowIndex,\n          rowKey,\n          event,\n        });\n        mouseEnterHandler && mouseEnterHandler(event);\n      };\n\n      const mouseLeaveHandler = eventHandlers['onMouseLeave'];\n      eventHandlers['onMouseLeave'] = event => {\n        onRowHover({\n          hovered: false,\n          rowData,\n          rowIndex,\n          rowKey,\n          event,\n        });\n        mouseLeaveHandler && mouseLeaveHandler(event);\n      };\n    }\n\n    return eventHandlers;\n  }\n}\n\nTableRow.defaultProps = {\n  tagName: 'div',\n};\n\nTableRow.propTypes = {\n  isScrolling: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  rowData: PropTypes.object.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  expandColumnKey: PropTypes.string,\n  depth: PropTypes.number,\n  rowEventHandlers: PropTypes.object,\n  rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  cellRenderer: PropTypes.func,\n  expandIconRenderer: PropTypes.func,\n  estimatedRowHeight: PropTypes.number,\n  getIsResetting: PropTypes.func,\n  onRowHover: PropTypes.func,\n  onRowExpand: PropTypes.func,\n  onRowHeightChange: PropTypes.func,\n  tagName: PropTypes.elementType,\n};\n\nexport default TableRow;\n"],"file":"TableRow.js"}
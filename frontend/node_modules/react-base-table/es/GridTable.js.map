{"version":3,"sources":["../src/GridTable.js"],"names":["React","PropTypes","cn","FixedSizeGrid","VariableSizeGrid","memoize","Header","GridTable","props","_setHeaderRef","bind","_setBodyRef","_setInnerRef","_itemKey","_getBodyWidth","_handleItemsRendered","_resetColumnWidthCache","bodyWidth","estimatedRowHeight","bodyRef","resetAfterColumnIndex","renderRow","resetAfterRowIndex","rowIndex","shouldForceUpdate","forceUpdateTable","headerRef","forceUpdate","scrollToPosition","args","scrollTo","scrollLeft","scrollToTop","scrollTop","scrollToLeft","scrollToRow","align","scrollToItem","getTotalRowsHeight","data","rowHeight","innerRef","clientHeight","length","columns","rowRenderer","rowData","render","containerStyle","classPrefix","className","frozenData","width","height","getRowHeight","headerWidth","useIsScrolling","onScroll","hoveredRowKey","overscanRowCount","style","onScrollbarPresenceChange","rest","headerHeight","_getHeaderHeight","frozenRowCount","frozenRowsHeight","cls","containerProps","Grid","Math","max","min","headerRenderer","ref","rowKey","Array","isArray","reduce","sum","overscanRowStartIndex","overscanRowStopIndex","visibleRowStartIndex","visibleRowStopIndex","onRowsRendered","overscanStartIndex","overscanStopIndex","startIndex","stopIndex","PureComponent","propTypes","object","string","number","isRequired","oneOfType","arrayOf","func","array","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { FixedSizeGrid, VariableSizeGrid } from 'react-window';\nimport memoize from 'memoize-one';\n\nimport Header from './TableHeader';\n\n/**\n * A wrapper of the Grid for internal only\n */\nclass GridTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._setHeaderRef = this._setHeaderRef.bind(this);\n    this._setBodyRef = this._setBodyRef.bind(this);\n    this._setInnerRef = this._setInnerRef.bind(this);\n    this._itemKey = this._itemKey.bind(this);\n    this._getBodyWidth = this._getBodyWidth.bind(this);\n    this._handleItemsRendered = this._handleItemsRendered.bind(this);\n    this._resetColumnWidthCache = memoize(bodyWidth => {\n      if (!this.props.estimatedRowHeight) return;\n      this.bodyRef && this.bodyRef.resetAfterColumnIndex(0, false);\n    });\n\n    this.renderRow = this.renderRow.bind(this);\n  }\n\n  resetAfterRowIndex(rowIndex = 0, shouldForceUpdate) {\n    if (!this.props.estimatedRowHeight) return;\n    this.bodyRef && this.bodyRef.resetAfterRowIndex(rowIndex, shouldForceUpdate);\n  }\n\n  forceUpdateTable() {\n    this.headerRef && this.headerRef.forceUpdate();\n    this.bodyRef && this.bodyRef.forceUpdate();\n  }\n\n  scrollToPosition(args) {\n    this.headerRef && this.headerRef.scrollTo(args.scrollLeft);\n    this.bodyRef && this.bodyRef.scrollTo(args);\n  }\n\n  scrollToTop(scrollTop) {\n    this.bodyRef && this.bodyRef.scrollTo({ scrollTop });\n  }\n\n  scrollToLeft(scrollLeft) {\n    this.headerRef && this.headerRef.scrollTo(scrollLeft);\n    this.bodyRef && this.bodyRef.scrollToPosition({ scrollLeft });\n  }\n\n  scrollToRow(rowIndex = 0, align = 'auto') {\n    this.bodyRef && this.bodyRef.scrollToItem({ rowIndex, align });\n  }\n\n  getTotalRowsHeight() {\n    const { data, rowHeight, estimatedRowHeight } = this.props;\n\n    if (estimatedRowHeight) {\n      return (this.innerRef && this.innerRef.clientHeight) || data.length * estimatedRowHeight;\n    }\n    return data.length * rowHeight;\n  }\n\n  renderRow(args) {\n    const { data, columns, rowRenderer } = this.props;\n    const rowData = data[args.rowIndex];\n    return rowRenderer({ ...args, columns, rowData });\n  }\n\n  render() {\n    const {\n      containerStyle,\n      classPrefix,\n      className,\n      data,\n      frozenData,\n      width,\n      height,\n      rowHeight,\n      estimatedRowHeight,\n      getRowHeight,\n      headerWidth,\n      bodyWidth,\n      useIsScrolling,\n      onScroll,\n      hoveredRowKey,\n      overscanRowCount,\n      // omit from rest\n      style,\n      onScrollbarPresenceChange,\n      ...rest\n    } = this.props;\n    const headerHeight = this._getHeaderHeight();\n    const frozenRowCount = frozenData.length;\n    const frozenRowsHeight = rowHeight * frozenRowCount;\n    const cls = cn(`${classPrefix}__table`, className);\n    const containerProps = containerStyle ? { style: containerStyle } : null;\n    const Grid = estimatedRowHeight ? VariableSizeGrid : FixedSizeGrid;\n\n    this._resetColumnWidthCache(bodyWidth);\n    return (\n      <div role=\"table\" className={cls} {...containerProps}>\n        <Grid\n          {...rest}\n          className={`${classPrefix}__body`}\n          ref={this._setBodyRef}\n          innerRef={this._setInnerRef}\n          itemKey={this._itemKey}\n          data={data}\n          frozenData={frozenData}\n          width={width}\n          height={Math.max(height - headerHeight - frozenRowsHeight, 0)}\n          rowHeight={estimatedRowHeight ? getRowHeight : rowHeight}\n          estimatedRowHeight={estimatedRowHeight}\n          rowCount={data.length}\n          overscanRowCount={overscanRowCount}\n          columnWidth={estimatedRowHeight ? this._getBodyWidth : bodyWidth}\n          columnCount={1}\n          overscanColumnCount={0}\n          useIsScrolling={useIsScrolling}\n          hoveredRowKey={hoveredRowKey}\n          onScroll={onScroll}\n          onItemsRendered={this._handleItemsRendered}\n          children={this.renderRow}\n        />\n        {headerHeight + frozenRowsHeight > 0 && (\n          // put header after body and reverse the display order via css\n          // to prevent header's shadow being covered by body\n          <Header\n            {...rest}\n            className={`${classPrefix}__header`}\n            ref={this._setHeaderRef}\n            data={data}\n            frozenData={frozenData}\n            width={width}\n            height={Math.min(headerHeight + frozenRowsHeight, height)}\n            rowWidth={headerWidth}\n            rowHeight={rowHeight}\n            headerHeight={this.props.headerHeight}\n            headerRenderer={this.props.headerRenderer}\n            rowRenderer={this.props.rowRenderer}\n            hoveredRowKey={frozenRowCount > 0 ? hoveredRowKey : null}\n          />\n        )}\n      </div>\n    );\n  }\n\n  _setHeaderRef(ref) {\n    this.headerRef = ref;\n  }\n\n  _setBodyRef(ref) {\n    this.bodyRef = ref;\n  }\n\n  _setInnerRef(ref) {\n    this.innerRef = ref;\n  }\n\n  _itemKey({ rowIndex }) {\n    const { data, rowKey } = this.props;\n    return data[rowIndex][rowKey];\n  }\n\n  _getHeaderHeight() {\n    const { headerHeight } = this.props;\n    if (Array.isArray(headerHeight)) {\n      return headerHeight.reduce((sum, height) => sum + height, 0);\n    }\n    return headerHeight;\n  }\n\n  _getBodyWidth() {\n    return this.props.bodyWidth;\n  }\n\n  _handleItemsRendered({ overscanRowStartIndex, overscanRowStopIndex, visibleRowStartIndex, visibleRowStopIndex }) {\n    this.props.onRowsRendered({\n      overscanStartIndex: overscanRowStartIndex,\n      overscanStopIndex: overscanRowStopIndex,\n      startIndex: visibleRowStartIndex,\n      stopIndex: visibleRowStopIndex,\n    });\n  }\n}\n\nGridTable.propTypes = {\n  containerStyle: PropTypes.object,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  headerHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).isRequired,\n  headerWidth: PropTypes.number.isRequired,\n  bodyWidth: PropTypes.number.isRequired,\n  rowHeight: PropTypes.number.isRequired,\n  estimatedRowHeight: PropTypes.number,\n  getRowHeight: PropTypes.func,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  data: PropTypes.array.isRequired,\n  frozenData: PropTypes.array,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  useIsScrolling: PropTypes.bool,\n  overscanRowCount: PropTypes.number,\n  hoveredRowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.object,\n  onScrollbarPresenceChange: PropTypes.func,\n  onScroll: PropTypes.func,\n  onRowsRendered: PropTypes.func,\n  headerRenderer: PropTypes.func.isRequired,\n  rowRenderer: PropTypes.func.isRequired,\n};\n\nexport default GridTable;\n"],"file":"GridTable.js"}
{"version":3,"sources":["../src/TableHeaderRow.js"],"names":["React","PropTypes","renderElement","TableHeaderRow","className","style","columns","headerIndex","cellRenderer","headerRenderer","expandColumnKey","ExpandIcon","expandIcon","Tag","tagName","rest","cells","map","column","columnIndex","key","defaultProps","propTypes","isScrolling","bool","string","object","arrayOf","isRequired","number","func","oneOfType","element","elementType"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,aAAT,QAA8B,SAA9B;AAEA;;;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAWjB;AAAA,MAVJC,SAUI,QAVJA,SAUI;AAAA,MATJC,KASI,QATJA,KASI;AAAA,MARJC,OAQI,QARJA,OAQI;AAAA,MAPJC,WAOI,QAPJA,WAOI;AAAA,MANJC,YAMI,QANJA,YAMI;AAAA,MALJC,cAKI,QALJA,cAKI;AAAA,MAJJC,eAII,QAJJA,eAII;AAAA,MAHQC,UAGR,QAHJC,UAGI;AAAA,MAFKC,GAEL,QAFJC,OAEI;AAAA,MADDC,IACC;;AACJ,MAAIC,KAAK,GAAGV,OAAO,CAACW,GAAR,CAAY,UAACC,MAAD,EAASC,WAAT;AAAA,WACtBX,YAAY,CAAC;AACXF,MAAAA,OAAO,EAAPA,OADW;AAEXY,MAAAA,MAAM,EAANA,MAFW;AAGXC,MAAAA,WAAW,EAAXA,WAHW;AAIXZ,MAAAA,WAAW,EAAXA,WAJW;AAKXK,MAAAA,UAAU,EAAEM,MAAM,CAACE,GAAP,KAAeV,eAAf,IAAkC,oBAAC,UAAD;AALnC,KAAD,CADU;AAAA,GAAZ,CAAZ;;AAUA,MAAID,cAAJ,EAAoB;AAClBO,IAAAA,KAAK,GAAGd,aAAa,CAACO,cAAD,EAAiB;AAAEO,MAAAA,KAAK,EAALA,KAAF;AAASV,MAAAA,OAAO,EAAPA,OAAT;AAAkBC,MAAAA,WAAW,EAAXA;AAAlB,KAAjB,CAArB;AACD;;AAED,SACE,oBAAC,GAAD,eAASQ,IAAT;AAAe,IAAA,SAAS,EAAEX,SAA1B;AAAqC,IAAA,KAAK,EAAEC;AAA5C,MACGW,KADH,CADF;AAKD,CA/BD;;AAiCAb,cAAc,CAACkB,YAAf,GAA8B;AAC5BP,EAAAA,OAAO,EAAE;AADmB,CAA9B;AAIAX,cAAc,CAACmB,SAAf,GAA2B;AACzBC,EAAAA,WAAW,EAAEtB,SAAS,CAACuB,IADE;AAEzBpB,EAAAA,SAAS,EAAEH,SAAS,CAACwB,MAFI;AAGzBpB,EAAAA,KAAK,EAAEJ,SAAS,CAACyB,MAHQ;AAIzBpB,EAAAA,OAAO,EAAEL,SAAS,CAAC0B,OAAV,CAAkB1B,SAAS,CAACyB,MAA5B,EAAoCE,UAJpB;AAKzBrB,EAAAA,WAAW,EAAEN,SAAS,CAAC4B,MALE;AAMzBrB,EAAAA,YAAY,EAAEP,SAAS,CAAC6B,IANC;AAOzBrB,EAAAA,cAAc,EAAER,SAAS,CAAC8B,SAAV,CAAoB,CAAC9B,SAAS,CAAC6B,IAAX,EAAiB7B,SAAS,CAAC+B,OAA3B,CAApB,CAPS;AAQzBtB,EAAAA,eAAe,EAAET,SAAS,CAACwB,MARF;AASzBb,EAAAA,UAAU,EAAEX,SAAS,CAAC6B,IATG;AAUzBhB,EAAAA,OAAO,EAAEb,SAAS,CAACgC;AAVM,CAA3B;AAaA,eAAe9B,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { renderElement } from './utils';\n\n/**\n * HeaderRow component for BaseTable\n */\nconst TableHeaderRow = ({\n  className,\n  style,\n  columns,\n  headerIndex,\n  cellRenderer,\n  headerRenderer,\n  expandColumnKey,\n  expandIcon: ExpandIcon,\n  tagName: Tag,\n  ...rest\n}) => {\n  let cells = columns.map((column, columnIndex) =>\n    cellRenderer({\n      columns,\n      column,\n      columnIndex,\n      headerIndex,\n      expandIcon: column.key === expandColumnKey && <ExpandIcon />,\n    })\n  );\n\n  if (headerRenderer) {\n    cells = renderElement(headerRenderer, { cells, columns, headerIndex });\n  }\n\n  return (\n    <Tag {...rest} className={className} style={style}>\n      {cells}\n    </Tag>\n  );\n};\n\nTableHeaderRow.defaultProps = {\n  tagName: 'div',\n};\n\nTableHeaderRow.propTypes = {\n  isScrolling: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  headerIndex: PropTypes.number,\n  cellRenderer: PropTypes.func,\n  headerRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  expandColumnKey: PropTypes.string,\n  expandIcon: PropTypes.func,\n  tagName: PropTypes.elementType,\n};\n\nexport default TableHeaderRow;\n"],"file":"TableHeaderRow.js"}